from customtkinter import *
import webbrowser
from tkinter import *
from tkinter import messagebox as msg
from tkinter import filedialog as fd
import win32print
import win32ui
import win32con

file_path = None  # Initialize file_path

class Notepad:
    def notepad_code(self):
        global file_path  # Declare file_path as global within the class method

        app = CTk()
        app.geometry("840x640")
        app.title("-Notepad")
        app.config(background="#1D2B36")
        app.iconbitmap("D://VS CODE//Project//Notepad_logo.png")

        def new_file():
            global file_path
            if confirm_save_changes():
                Text_area.delete(1.0, END)
                file_path = None
                app.title("Untitled - Notepad")

        def confirm_save_changes():
            if Text_area.edit_modified():
                response = msg.askyesnocancel("Save Changes", "Do you want to save changes to the current document?")
                if response:  # Yes
                    save_file()
                    return True
                elif response is None:  # Cancel
                    return False
            return True

        def New_window():
            object.notepad_code()

        def open_file():
            global file_path
            file_path = fd.askopenfilename(filetypes=[("Text files", "*.txt"), ("All files", "*.*")])
            if file_path:
                with open(file_path, 'r') as file:
                    content = file.read()
                    Text_area.delete(1.0, END)  # Clear the current content of the Textbox
                    Text_area.insert(END, content)
                    app.title(f"{file_path} - Notepad")  # Update window title with the file path

        def save_file():
            global file_path
            if file_path:
                with open(file_path, 'w') as file:
                    file.write(Text_area.get("1.0", "end-1c"))
            else:
                save_file_as()

        def save_file_as():
            global file_path
            file_path = fd.asksaveasfilename(defaultextension=".txt",
                                             filetypes=[("Text Documents", "*.txt"), ("All Files", "*.*")])
            if file_path:
                with open(file_path, 'w') as file:
                    file.write(Text_area.get("1.0", "end-1c"))
                app.title(f"{file_path} - Notepad")  # Update window title with the file path

        def print_text():
            content = Text_area.get("1.0", "end-1c")  # Get the text from the Textbox

            # Get the default printer
            printer_name = win32print.GetDefaultPrinter()

            # Create a device context for the printer
            hdc = win32ui.CreateDC()
            hdc.CreatePrinterDC(printer_name)
            hdc.StartDoc("Notepad Print")
            hdc.StartPage()

            # Create a font
            font = win32ui.CreateFont({
                "name": "Times New Roman",
                "height": 120,
                "weight": win32con.FW_NORMAL
            })
            hdc.SelectObject(font)

            # Print the text
            hdc.TextOut(100, 100, content)

            # End the page and document
            hdc.EndPage()
            hdc.EndDoc()
            hdc.DeleteDC()


        def search_with_bing():
            try:
                # Get selected text
                selected_text = Text_area.selection_get()
                if selected_text:
                    # Replace spaces with '+' for URL encoding
                    query = selected_text.replace(" ", "+")
                    # Open Bing search in default web browser
                    webbrowser.open(f"https://www.bing.com/search?q={query}")
            except TclError:
                # Handle case where no text is selected
                print("No text selected")

        def myfun():
            pass

        # File Menu 
        mainmenu = Menu(app)
        filemenu = Menu(master=mainmenu, tearoff=0, bg="#A1ADF7")
        filemenu.add_command(label="New", command=new_file)
        filemenu.add_command(label="New Window", command=New_window)
        filemenu.add_command(label="Open...", command=open_file)
        filemenu.add_command(label="Save", command=save_file)
        filemenu.add_command(label="Save As...", command=save_file_as)
        filemenu.add_separator()
        filemenu.add_command(label="Page Setup...", command=myfun)
        filemenu.add_command(label="Print...", command=print_text)
        filemenu.add_command(label="Exit", command=lambda: quit())
        mainmenu.add_cascade(label="File", menu=filemenu)
        app.config(menu=mainmenu)

        # Edit Menu
        editmenu = Menu(master=mainmenu, tearoff=0, bg="#A1ADF7")
        editmenu.add_command(label="Undo", command=myfun)
        editmenu.add_separator()
        editmenu.add_command(label="Cut", command=myfun)
        editmenu.add_command(label="Copy", command=myfun)
        editmenu.add_command(label="Paste", command=myfun)
        editmenu.add_command(label="Delete", command=myfun)
        editmenu.add_separator()
        editmenu.add_command(label="Search with Bing", command=search_with_bing)
        editmenu.add_command(label="Find...", command=myfun)
        editmenu.add_command(label="Find Next", command=myfun)
        editmenu.add_command(label="Find Previous", command=myfun)
        editmenu.add_command(label="Replace...", command=myfun)
        editmenu.add_command(label="Go To...", command=myfun)
        editmenu.add_separator()
        editmenu.add_command(label="Select All", command=myfun)
        editmenu.add_command(label="Time/Date", command=myfun)
        mainmenu.add_cascade(label="Edit", menu=editmenu)

        # Format menu
        formatmenu = Menu(mainmenu, tearoff=0, bg="#A1ADF7")
        formatmenu.add_command(label="Word Wrap", command=myfun)
        formatmenu.add_command(label="Font...", command=myfun)
        mainmenu.add_cascade(label="Format", menu=formatmenu)

        # View Menu
        viewmenu = Menu(mainmenu, tearoff=0, bg="#A1ADF7")
        viewmenu.add_command(label="Zoom", command=myfun)
        viewmenu.add_checkbutton(label="Status Bar", command=myfun)
        mainmenu.add_cascade(label="View", menu=viewmenu)

        # Help Menu
        helpmenu = Menu(mainmenu, tearoff=0, bg="#A1ADF7")
        helpmenu.add_command(label="View Help", command=myfun)
        helpmenu.add_command(label="Send Feedback", command=myfun)
        helpmenu.add_separator()
        helpmenu.add_command(label="About Notepad", command=myfun)
        mainmenu.add_cascade(label="Help", menu=helpmenu)

        Text_area = CTkTextbox(master=app,
                               width=1080,
                               height=780,
                               text_color="white",
                               corner_radius=3,
                               border_color="black",
                               fg_color="#1D2B36",
                               scrollbar_button_color='green',
                               scrollbar_button_hover_color="purple",
                               wrap="word",
                               font=("Roboto", 22))
        Text_area.pack()
        app.mainloop()

object = Notepad()
object.notepad_code()